/*
 * Adria transcompiler
 *
 * Copyright (C) 2013 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 * Licensed under the MIT license.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
var test = require('./test');
var Listenable = require('../astd/listenable');

/*
 * setup an object with a few properties
 */
var TestObj = proto (Listenable) { };

/*
 * tests
 */

test('on', function() {

    var testObj = new TestObj();
    var triggered = false;

    testObj.on('testevent', function(event) {
        triggered = true;
    });

    testObj.execute('testevent');

    assert(triggered === true);
});

test('once', function() {

    var testObj = new TestObj();
    var triggered = 0;

    testObj.once('testevent', function(event) {
        triggered++;
    });

    testObj.execute('testevent');
    testObj.execute('testevent');

    assert(triggered === 1);
});



test.summary();
